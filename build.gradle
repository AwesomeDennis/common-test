ext {
    springVersion = "3.2.4.RELEASE"
}

buildscript {
    repositories {
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/groups/public/' }
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local_Snapshots' }
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local' }
        mavenLocal()
    }

    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:1.1.1"
    }
}


configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 10, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'java'
    apply plugin: 'findbugs'
    apply from: '../gradle/eclipse.gradle'

    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
    tasks.withType(Javadoc) { options.encoding = 'UTF-8' }

    group = 'com.baidu.common'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    version = '1.0'

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir 'src/main/configure'
                srcDir 'src/main/resources'
            }
        }
        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'src/main/configure'
                srcDir 'src/test/resources'
                srcDir 'src/test/configure'
            }
        }
    }

    repositories {
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/groups/public/' }
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local_Snapshots' }
        maven { url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local' }
        mavenLocal()
    }

    dependencies {

    }

    jar {
        manifest {
            attributes 'Implementation-Title': name, 'Implementation-Version': version
        }
    }

    findbugs {
        toolVersion = "2.0.1"
        sourceSets = [sourceSets.main]
        ignoreFailures = true
    }

    task deleteConf(type: Delete) {
        for (File f : file("src/main/configure").listFiles()) {
            if (f.isFile()) {
                delete f
            }
        }
    }

    afterEvaluate {
        task copyDependProjects(type: Copy, dependsOn: [deleteConf]) {
            def useConf = 'dev'
            if (project.hasProperty('profile')) {
                useConf = "${profile}"
            }
            for (entry in configurations.compile.getAllDependencies()) {
                if (entry instanceof
                        org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency) {
                    from(entry.dependencyProject.file('src/main/conf/static'))
                    into "src/main/configure"

                    from(entry.dependencyProject.file("src/main/conf/${useConf}"))
                    into "src/main/configure"
                }
            }
        }

        task copyConf(type: Copy, dependsOn: [deleteConf, copyDependProjects]) {
            def useConf = 'dev'
            if (project.hasProperty('profile')) {
                useConf = "${profile}"
            }

            from "src/main/conf/${useConf}"
            into "src/main/configure"
            from "src/main/conf/static"
            into "src/main/configure"
        }

        tasks.eclipse.dependsOn copyConf
        tasks.jar.dependsOn copyConf
    }
    tasks.clean.delete << outputDir

    uploadArchives {
        repositories {
            mavenLocal()
        }
    }
}

configure(subprojects) {
    dependencies {
        compile "org.projectlombok:lombok:1.12.2"
        compile "mcpack-j:mcpack-j:1.0.FCSUN.TRAIN"
        compile "org.springframework:spring-core:${springVersion}"
        compile "org.springframework:spring-context:${springVersion}"
        compile "org.springframework:spring-jdbc:${springVersion}"
        compile "org.springframework:spring-aop:${springVersion}"
        compile "org.springframework:spring-aspects:${springVersion}"
        compile "org.springframework:spring-expression:${springVersion}"
        compile "log4j:log4j:1.2.17"
        compile "com.google.guava:guava:14.0"
        compile "commons-lang:commons-lang:2.6"
        compile 'commons-io:commons-io:2.4'
        compile 'commons-dbcp:commons-dbcp:1.4'
        compile 'org.apache.commons:commons-email:1.2'
        compile 'commons-beanutils:commons-beanutils:1.8.3'
        compile 'commons-collections:commons-collections:3.2.1'
        compile 'commons-pool:commons-pool:1.6'
        compile 'commons-codec:commons-codec:1.8'
        compile 'mysql:mysql-connector-java:5.1.16'
        compile 'javax.persistence:persistence-api:1.0'
        compile 'net.sf.ehcache:ehcache:2.8.0'
        compile 'commons-dbutils:commons-dbutils:1.5'
        compile 'javax.validation:validation-api:1.0.0.GA'
        compile 'org.hibernate:hibernate-validator:4.2.0.Final'
        compile 'com.alibaba:fastjson:1.1.39'
        compile 'net.sf.json-lib:json-lib:2.2.3:jdk15'
        compile 'org.apache.httpcomponents:httpclient:4.3.2'
        compile 'org.apache.httpcomponents:httpcore:4.3.2'
        compile "org.apache.httpcomponents:fluent-hc:4.3.2"
        compile 'redis.clients:jedis:2.6.0'

        compile 'com.google.code.gson:gson:2.2.3'
        compile "org.jsoup:jsoup:1.7.3"
        compile "net.sourceforge.htmlcleaner:htmlcleaner:2.8"

        compile 'com.fasterxml.jackson.core:jackson-core:2.3.3'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
        compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.3'

        compile 'org.apache.poi:poi:3.11'
        compile 'org.apache.poi:poi-ooxml:3.11'
        compile 'org.apache.poi:poi-ooxml-schemas:3.11'
        compile 'dom4j:dom4j:1.6.1'
        compile 'org.apache.xmlbeans:xmlbeans:2.6.0'

        compile 'product-api-wg:product-api-wg:1.8-SNAPSHOT'
        compile 'com.baidu.drapi:json-rpc-proxy:1.0.1'
        compile 'commons-fileupload:commons-fileupload:1.2'

        compile 'commons-net:commons-net:3.3'

        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile "org.jmock:jmock-junit4:2.6.0"
        testCompile "junit:junit:4.11"
        // testCompile "org.jmock:jmock-junit4:2.8.1"
        //      testCompile "junit:junit:4.7"
        testCompile "org.dbunit:dbunit:2.4.9"
        testCompile "org.slf4j:slf4j-jdk14:1.7.2"
        testCompile "com.jayway.jsonpath:json-path:0.9.1"
        // compile "org.mockito:mockito-all:1.8.4"
        compile "org.mockito:mockito-all:1.9.5"

        compile fileTree(dir: libDir, include: '*.jar')

    }
}

defaultTasks 'clean', 'jar', 'war', 'zip'//, 'uploadArchives'
