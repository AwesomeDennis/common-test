ext {
	springVersion = "4.1.4.RELEASE"
	springDataJpaVersion = "1.7.1.RELEASE"
	springDataMongodbVersion = "1.6.2.RELEASE"
	jacksonVersion = "2.5.0"
	woodstoxVersion = "4.4.1"
	hibernateVersion = "4.3.7.Final"
	httpclientVersion = "4.3.6"
	log4jVersion = "1.2.17"
	slf4jVersion = "1.7.10"
}

subprojects {
	apply plugin: 'eclipse'
	apply plugin: 'java'
	apply plugin: 'findbugs'
	
	eclipse {
		classpath {
			downloadSources=true
		}
	}

	tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
	tasks.withType(Javadoc) { options.encoding = 'UTF-8' }
	
	group = 'com.baidu.dumper'
	
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	version = '1.0'
	
	buildscript {
		repositories {
			maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/groups/public/'}
			maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local_Snapshots'}
			maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local'}
			mavenLocal()
		}
		configurations.all {
			resolutionStrategy {
				cacheDynamicVersionsFor 10, 'seconds'
				cacheChangingModulesFor 0, 'seconds'
			}
		}
	}
	
	dependencies {		
		compile "org.projectlombok:lombok:1.12.2"
		compile "mcpack-j:mcpack-j:1.0.FCSUN.TRAIN"
		compile "org.springframework:spring-core:${springVersion}"
		compile "org.springframework:spring-beans:${springVersion}"
		compile "org.springframework:spring-context:${springVersion}"
		compile "org.springframework:spring-context-support:${springVersion}"
		compile "org.springframework:spring-expression:${springVersion}"
		compile "org.springframework:spring-aop:${springVersion}"
		compile "org.springframework:spring-tx:${springVersion}"
		compile "org.springframework:spring-aspects:${springVersion}"
		
		compile "log4j:log4j:${log4jVersion}"
		compile "org.slf4j:slf4j-jdk14:${slf4jVersion}"
		compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
		compile "com.google.guava:guava:14.0"
		compile "commons-lang:commons-lang:2.6"
		compile 'commons-io:commons-io:2.4'
		compile 'commons-dbcp:commons-dbcp:1.4'
		compile 'commons-beanutils:commons-beanutils:1.8.3'
		compile 'commons-collections:commons-collections:3.2.1'
		compile 'commons-pool:commons-pool:1.6'
		compile 'commons-codec:commons-codec:1.8'
		compile 'mysql:mysql-connector-java:5.1.16'
		compile 'javax.persistence:persistence-api:1.0'
		compile 'javax.servlet:servlet-api:2.5'
		
		//compile "org.apache.httpcomponents:httpcore:${httpclientVersion}"
		compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
		compile "org.apache.httpcomponents:httpclient-cache:${httpclientVersion}"
		compile "org.apache.httpcomponents:fluent-hc:${httpclientVersion}"
		compile "org.jsoup:jsoup:1.7.3"
		
		
		compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
		compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
		compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
		compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
		compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:${jacksonVersion}"
		compile "org.codehaus.woodstox:woodstox-core-asl:${woodstoxVersion}"
		
		compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
		compile "org.hibernate:hibernate-core:${hibernateVersion}"
		compile 'org.hibernate:hibernate-validator:5.1.3.Final'
		compile 'javax.validation:validation-api:1.0.0.GA'
		compile 'net.sf.ehcache:ehcache:2.8.0'
		
		compile "org.aspectj:aspectjtools:1.7.4"
		compile "org.aspectj:aspectjweaver:1.6.11"
		compile "org.aspectj:aspectjrt:1.6.11"
		
		compile "org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1"
		compile "org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:2.0.0"
		compile "org.apache.activemq:activemq-all:5.5.0"
		
		compile "com.alibaba:fastjson:1.2.9"
		
		testCompile "org.springframework:spring-test:${springVersion}"
		testCompile "org.jmock:jmock-junit4:2.6.0"
		testCompile "junit:junit:4.11"
		testCompile "org.dbunit:dbunit:2.4.9"
		
		compile fileTree(dir: libDir, include: '*.jar')	
		
	}

	
	sourceSets {
		main {
			java {
				srcDir 'src/main/java'
			}
		}
		test {
			java {
				srcDir 'src/test/java'
			}
			resources {					
				srcDir 'src/main/configure'
				srcDir 'src/test/resources'
			}
		}
	}

	repositories {
		maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/groups/public/'}
		maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local_Snapshots'}
		maven{ url 'http://maven.scm.baidu.com:8081/nexus/content/repositories/Baidu_Local'}
		mavenLocal()
	}
	
	dependencies {
		
	}
	
	jar {
		manifest {
			attributes 'Implementation-Title': name, 'Implementation-Version': version
		}
	}

	findbugs {
		toolVersion = "2.0.1"
		sourceSets = [sourceSets.main]
		ignoreFailures = true
	}

	task deleteConf(type: Delete) {
		for(File f : file("src/main/configure").listFiles()){
			if (f.isFile()){
				delete f
			}
		}
	}
	
	afterEvaluate {	
		task copyDependProjects(type: Copy,dependsOn:[deleteConf]) {
			def useConf = 'dev'
			if (project.hasProperty('profile')) {
					useConf = "${profile}"
			}
			for(entry in configurations.compile.getAllDependencies()) { 
				if(entry instanceof 
					org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency) {
				from (entry.dependencyProject.file('src/main/conf/static')) 
				into "src/main/configure"
				
				from (entry.dependencyProject.file("src/main/conf/${useConf}")) 
				into "src/main/configure"		 
				} 
			}
		}
		
		task copyConf(type: Copy, dependsOn :[deleteConf, copyDependProjects]) {
			def useConf = 'dev'
			if (project.hasProperty('profile')) {
				useConf = "${profile}"
			}
			
			from "src/main/conf/${useConf}"
			into "src/main/configure"
			from "src/main/conf/static"
			into "src/main/configure"
		}
		
		tasks.eclipse.dependsOn copyConf
		tasks.jar.dependsOn copyConf
	}
	tasks.clean.delete << outputDir

	uploadArchives {
		repositories {
			mavenLocal()
		}
	}
}

project('common-test-base') {
	dependencies {	
		
	}	
	defaultTasks 'clean', 'uploadArchives'
}


project('common-test-biz') {
	dependencies {	
		compile project(':common-test-base')
	}	
	defaultTasks 'clean', 'uploadArchives'
}


defaultTasks 'clean', 'jar', 'zip','uploadArchives'
